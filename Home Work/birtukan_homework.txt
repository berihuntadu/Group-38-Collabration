## QUESTION
1 What is http
2 what is the difference between http1.0 and http2.0
3 Create a REST API
3 Arabic to Geeze number convertor
4 Bash command lines practice for Linux

## ANSWER

## 1. What is HTTP?

HTTP (HyperText Transfer Protocol) is the main protocol used for communication on the web. It allows a client (like Chrome, Firefox) to request data and a server (like Google or Facebook) to send back information such as text, images, or videos. HTTP is stateless, meaning every request is handled separately without remembering previous ones.

 .How does HTTP work?

HTTP works in a request–response cycle:

The browser sends a request (example: GET /index.html).

The server receives it, processes it, and finds the resource.

The server replies with a response (example: 200 OK + webpage content).

The browser displays the page to the user.

This process happens every time you open a webpage, click a link, or watch a video online.

 .Versions of HTTP

HTTP/0.9 (1991): Only supported GET, used for simple text.

HTTP/1.0 (1996): Added headers, status codes, and more request methods like POST.

HTTP/1.1 (1997): Improved performance with persistent connections and caching.

HTTP/2.0 (2015): Faster with multiplexing (multiple requests on one connection) and header compression.

HTTP/3.0 (2022): Uses QUIC (built on UDP) for speed and security.


## 2 Difference between HTTP/1.0 and HTTP/2.0?


HTTP/1.0 (1996):

Each request opens a new connection to the server.

Only one request per connection (slow if loading many images, CSS, JS).

Limited support for caching and headers.

HTTP/2.0 (2015):

Uses multiplexing → many requests can be sent at once on a single connection.

Supports header compression, reducing extra data.

Much faster and efficient, especially for modern websites with many resources.

In short: HTTP/1.0 is simple but slow (one request per connection), while HTTP/2.0 is modern, faster, and supports multiple requests in one connection.

## 3 Arabic to Geeze number convertor

python code

 Arabic to Ge'ez number converter in Python

# Mapping for 1–9
ones = {
    1: "፩", 2: "፪", 3: "፫", 4: "፬", 5: "፭",
    6: "፮", 7: "፯", 8: "፰", 9: "፱"
}

# Mapping for 10, 20, ..., 90
tens = {
    10: "፲", 20: "፳", 30: "፴", 40: "፵",
    50: "፶", 60: "፷", 70: "፸", 80: "፹", 90: "፺"
}

# Mapping for hundreds
hundreds = {100 * i: ones[i] + "፻" if i > 1 else "፻" for i in range(1, 10)}

# Special symbol for 10,000
ten_thousand = "፼"

def arabic_to_geez(num: int) -> str:
    """Convert Arabic number to Ge'ez number system."""
    if num == 0:
        return "0"  # No zero in Ge'ez, just return "0"

    result = ""

    # Handle very large numbers using 10,000 separator (፼)
    if num >= 10000:
        left = num // 10000
        right = num % 10000
        result += arabic_to_geez(left) + ten_thousand
        if right > 0:
            result += arabic_to_geez(right)
        return result

    # Handle hundreds
    if num >= 100:
        h = num // 100 * 100
        result += hundreds[h]
        num = num % 100

    # Handle tens
    if num >= 10:
        t = num // 10 * 10
        result += tens[t]
        num = num % 10

    # Handle ones
    if num > 0:
        result += ones[num]

    return result


#example

test_numbers = [1, 10, 12, 100, 123]
for n in test_numbers:
    print(n, "→", arabic_to_geez(n))


## 4 Bash command lines practice for Linux

25 Common Bash/Linux Commands

1. ls – List files and directories.

   ls
   ls -l    # long format
   ls -a    # show hidden files


2. mkdir – Make a new directory.

   mkdir my_folder


3. echo – Print text or variables.

   echo "Hello, World!"


4. man – Show manual pages (help).

   man ls


5. awk – Text processing tool.

   awk '{print $1}' file.txt


6. sed – Stream editor for text replacement.

   sed 's/old/new/g' file.txt


7. top – Show running processes.

   top


8. ps – Display active processes.

   ps aux


9. ln – Create links (shortcuts).

   ln -s file.txt shortcut.txt


10. vi – Open file in vi editor.

    vi file.txt


11. nano – Open file in nano editor.

    nano file.txt


12. strings – Extract text from binary files.

    strings program.bin


13. cat – Display file content.

    cat file.txt


14. dc – Desk calculator (command-line calculator).

    dc


15. dd – Copy and convert data.

    dd if=input.txt of=output.txt


16. diff – Compare two files.

    diff file1.txt file2.txt


17. find – Search for files.

    find . -name "*.txt"


18. tar – Archive files.

    tar -cvf archive.tar my_folder/
    tar -xvf archive.tar


19. less – View files page by page.

    less file.txt


20. wc – Count words, lines, and characters.

    wc file.txt


21. chmod – Change file permissions.

    chmod 755 script.sh


22. chown – Change file ownership.

    sudo chown user:user file.txt


23. uname – Show system information.

    uname -a


24. wget – Download files from the web.

    wget https://example.com/file.txt


25. pwd – Show current working directory.

    pwd



